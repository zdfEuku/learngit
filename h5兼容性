5、apple-mobile-web-app-capable
apple-mobile-web-app-capable是设置Web应用是否以全屏模式运行。
语法：
<meta name="apple-mobile-web-app-capable"content="yes">
说明：
如果content设置为yes，Web应用会以全屏模式运行，反之，则不会。content的默认值是no，表示正常显示。你可以通过只读属性window.navigator.standalone来确定网页是否以全屏模式显示。
---------------------------------------------------------------------------
6、format-detection
format-detection 启动或禁用自动识别页面中的电话号码。
语法：
<meta name="format-detection"content="telephone=no">
说明：
默认情况下，设备会自动识别任何可能是电话号码的字符串。设置telephone=no可以禁用这项功能。
----------------------------------------------------------------------------
7、html5调用安卓或者ios的拨号功能
html5提供了自动调用拨号的标签，只要在a标签的href中添加tel:就可以了。
如下：
<ahref="tel:4008106999,1034">400-810-6999 转 1034</a>
拨打手机直接如下
 <a href="tel:15677776767">点击拨打15677776767</a>
 ----------------------------------------------------------------------------
 9、上下拉动滚动条时卡顿、慢
 body {-webkit-overflow-scrolling:touch; overflow-scrolling: touch;}

 Android3+和iOS5+支持CSS3的新属性为overflow-scrolling
 ----------------------------------------------------------------------------
 12、iphone及ipad下输入框默认内阴影
 Element{
   -webkit-appearance:none;
 }
----------------------------------------------------------------------------
 13、ios和android下触摸元素时出现半透明灰色遮罩
 Element {
   -webkit-tap-highlight-color:rgba(255,255,255,0)
 }
 设置alpha值为0就可以去除半透明灰色遮罩，备注：transparent的属性值在android下无效。
 ----------------------------------------------------------------------------
26、 IOS中input键盘事件keyup、keydown、keypress支持不是很好.
    要使用 oninput事件
-----------------------------------------------------------------------------
28、ios 设置input 按钮样式会被默认样式覆盖
解决方式如下：
input,
textarea {
  border: 0;
  -webkit-appearance: none;
}
设置默认样式为none
--------------------------------------------------------------------------------
29、IOS键盘字母输入，默认首字母大写
解决方案，设置如下属性
<input type="text"autocapitalize="off"/>
--------------------------------------------------------------------------------
32、移动端点击300ms延迟
300ms尚可接受，不过因为300ms产生的问题，我们必须要解决。300ms导致用户体验并不是很好，解决这个问题，我们一般在移动端用tap事件来取代click事件。
推荐两个js，一个是fastclick，一个是tap.js
关于300ms延迟，具体请看：http://thx.github.io/mobile/300ms-click-delay/
---------------------------------------------------------------------------------
33、移动端点透问题
案例如下：
<div id="haorooms">点头事件测试</div>

<a href="www.baidu.net">www.baidu.com</a>
div是绝对定位的蒙层,并且z-index高于a。而a标签是页面中的一个链接，我们给div绑定tap事件：
$('#haorooms').on('tap',function(){
$('#haorooms').hide();
});
我们点击蒙层时 div正常消失，但是当我们在a标签上点击蒙层时，发现a链接被触发，这就是所谓的点透事件。
原因：
touchstart 早于 touchend 早于click。 亦即click的触发是有延迟的，这个时间大概在300ms左右，也就是说我们tap触发之后蒙层隐藏， 此时 click还没有触发，300ms之后由于蒙层隐藏，我们的click触发到了下面的a链接上。
解决：
（1）尽量都使用touch事件来替换click事件。例如用touchend事件(推荐)。
（2）用fastclick，https://github.com/ftlabs/fastclick
（3）用preventDefault阻止a标签的click
（4）延迟一定的时间(300ms+)来处理事件 （不推荐）
（5）以上一般都能解决，实在不行就换成click事件。
下面介绍一下touchend事件，如下：
$("#haorooms").on("touchend",function(event) {
   event.preventDefault();
 });